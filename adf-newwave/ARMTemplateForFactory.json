{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-newwave"
		},
		"LS_BLOB_input_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BLOB_input'"
		},
		"LS_SQL_newwave_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_newwave'"
		},
		"LS_SQL_newwave_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-server-newwave.database.windows.net"
		},
		"LS_SQL_newwave_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldb-newwave"
		},
		"LS_SQL_newwave_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ashwin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_consolidate_details')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "consolidate customer details",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*customerdetails*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_customer_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_consolidated_customer_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "consolidate order details",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*orderdetails*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_order_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_consolidated_order_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sql store customer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "consolidate customer details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_consolidated_customer_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sql store order",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "consolidate order details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_consolidated_order_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_order",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_customer_details')]",
				"[concat(variables('factoryId'), '/datasets/DS_consolidated_customer_details')]",
				"[concat(variables('factoryId'), '/datasets/DS_order_details')]",
				"[concat(variables('factoryId'), '/datasets/DS_consolidated_order_details')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_order')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_newwave",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_newwave')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_newwave",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_newwave')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_consolidated_customer_details')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customers.csv",
						"folderPath": "Customers",
						"container": "container-output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_consolidated_order_details')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "orders.csv",
						"folderPath": "Orders",
						"container": "container-output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_customer_details')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "container-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_order_details')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "container-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "OrderTimestamp",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BLOB_input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BLOB_input_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_newwave')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_newwave_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_newwave_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_newwave_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_newwave_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_DAILY')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_consolidate_details",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_stage_data",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_join_orders_customers",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2024-08-26T10:23:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_consolidate_details')]",
				"[concat(variables('factoryId'), '/pipelines/PL_stage_data')]",
				"[concat(variables('factoryId'), '/pipelines/PL_join_orders_customers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_clean')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_customer",
								"type": "DatasetReference"
							},
							"name": "customersTable"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_order",
								"type": "DatasetReference"
							},
							"name": "ordersTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_cleanCustomer",
								"type": "DatasetReference"
							},
							"name": "storeCustomers"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_cleanOrder",
								"type": "DatasetReference"
							},
							"name": "storeOrders"
						}
					],
					"transformations": [
						{
							"name": "removeNullCustomers"
						},
						{
							"name": "rankCustomerIDs"
						},
						{
							"name": "removeDuplicatesCustomers"
						},
						{
							"name": "selectWithoutRank"
						},
						{
							"name": "removeNullOrders"
						},
						{
							"name": "rankOrderIDs"
						},
						{
							"name": "removeDuplicateOrders"
						},
						{
							"name": "selectWithoutRanks"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as string,",
						"          FirstName as string,",
						"          LastName as string,",
						"          Email as string,",
						"          PhoneNumber as string,",
						"          Address as string,",
						"          City as string,",
						"          State as string,",
						"          ZipCode as string,",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> customersTable",
						"source(output(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as timestamp,",
						"          Price as double,",
						"          CustomerID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ordersTable",
						"customersTable filter(!(isNull(ZipCode) || ZipCode == 'NULL' || isNull(Country) || Country == 'NULL')) ~> removeNullCustomers",
						"removeNullCustomers window(over(CustomerID),",
						"     asc(CustomerID, true),",
						"     RANK = rowNumber()) ~> rankCustomerIDs",
						"rankCustomerIDs filter(RANK == 1) ~> removeDuplicatesCustomers",
						"removeDuplicatesCustomers select(mapColumn(",
						"          CustomerID,",
						"          FirstName,",
						"          LastName,",
						"          Email,",
						"          PhoneNumber,",
						"          Address,",
						"          City,",
						"          State,",
						"          ZipCode,",
						"          Country",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectWithoutRank",
						"ordersTable filter(!isNull(OrderTimestamp)) ~> removeNullOrders",
						"removeNullOrders window(over(OrderID),",
						"     asc(OrderID, true),",
						"     RANK = rowNumber()) ~> rankOrderIDs",
						"rankOrderIDs filter(RANK == 1 ) ~> removeDuplicateOrders",
						"removeDuplicateOrders select(mapColumn(",
						"          OrderID,",
						"          ProductID,",
						"          ProductName,",
						"          Quantity,",
						"          OrderTimestamp,",
						"          Price,",
						"          CustomerID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectWithoutRanks",
						"selectWithoutRank sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> storeCustomers",
						"selectWithoutRanks sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> storeOrders"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_order')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_cleanCustomer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_cleanOrder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_cleanCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_newwave",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_newwave')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_cleanOrder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_newwave",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": "order"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_newwave')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_stage_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Clean Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_clean",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customersTable": {},
									"ordersTable": {},
									"storeCustomers": {},
									"storeOrders": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_clean')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_join_orders_customers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JOIN orders and cutomers",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_join",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OrderTable": {},
									"CustomerTable": {},
									"storeSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_join')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_join')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_cleanOrder",
								"type": "DatasetReference"
							},
							"name": "OrderTable"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_cleanCustomer",
								"type": "DatasetReference"
							},
							"name": "CustomerTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_merged_orders",
								"type": "DatasetReference"
							},
							"name": "storeSQL"
						}
					],
					"transformations": [
						{
							"name": "JoinOnCustomerID"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as timestamp,",
						"          Price as double,",
						"          CustomerID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OrderTable",
						"source(output(",
						"          CustomerID as string,",
						"          FirstName as string,",
						"          LastName as string,",
						"          Email as string,",
						"          PhoneNumber as string,",
						"          Address as string,",
						"          City as string,",
						"          State as string,",
						"          ZipCode as string,",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> CustomerTable",
						"OrderTable, CustomerTable join(OrderTable@CustomerID == CustomerTable@CustomerID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinOnCustomerID",
						"JoinOnCustomerID sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> storeSQL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_cleanOrder')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_cleanCustomer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_merged_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_merged_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_newwave",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "prep",
					"table": "merged_orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_newwave')]"
			]
		}
	]
}